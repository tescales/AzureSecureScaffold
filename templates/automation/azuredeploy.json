{
    "$schema": "http://schemas.microsoft.org/azure/deploymentTemplate?api-version=2015-01-01-preview#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "accountName": {
            "type": "string",
          "metadata": {
            "description": "The name of the Azure Automation account to deploy to."
          }
        },
        "regionId": {
            "type": "string",
            "allowedValues": [
                "Japan East",
                "East US 2",
                "West Europe",
                "Southeast Asia",
                "South Central US"
            ],
            "metadata": {
                "description": "The region to deploy the Automation account in."
            }
        },
        "userName": {
            "type": "string",
            "metadata": {
                "description": "The username for the Azure Automation credential."
            }
        },
        "password": {
            "type": "secureString",
            "metadata": {
                "description": "The password for the Azure Automation credential."
            }
        },
        "subscriptionIdValue": {
            "type": "string",
            "metadata": {
                "description": "Your Azure subscription ID."
            }
        }
    },
  "variables": {
    "pricingTier": "Free",

    "startRunbookName": "StartAzureV2VMs",
    "startRunbookUri": "https://gallery.technet.microsoft.com/scriptcenter/Start-Azure-ARM-VMs-66fb875d/file/162482/1/StartAzureV2Vm.graphrunbook",
    "startRunbookType": "Graph",
    "startRunbookDescription": "This Graphical PowerShell runbook connects to Azure using an Automation Run As account and starts all V2 VMs in an Azure subscription or in a resource group or a single named V2 VM. You can attach a recurring schedule to this runbook to run it at a specific time.",
    "stopRunbookName": "StopAzureV2VMs",
    "stopRunbookUri": "https://gallery.technet.microsoft.com/scriptcenter/Stop-Azure-ARM-VMs-1ba96d5b/file/162480/1/StopAzureV2Vm.graphrunbook",
    "stopRunbookType": "Graph",
    "stopRunbookDescription": "This Graphical PowerShell runbook connects to Azure using an Automation Run As account and stops all V2 VMs in an Azure subscription or in a resource group or a single named V2 VM. You can attach a recurring schedule to this runbook to run it at a specific time",

    "registerDSCRunbookName": "Register-VMDSC",
    "registerDSCRunbookUri": "https://gallery.technet.microsoft.com/scriptcenter/Registers-Azure-resource-31979771/file/160035/1/Register-VMDSC.graphrunbook",
    "registerDSCRunbookType": "Graph",
    "registerDSCRunbookDescription": "This runbook registers Azure resource manager virtual machines with automation DSC service. These can either be Windows or Linux virtual machines that are supported with DSC. You can specify the whole subscription, a specific resource group, or an individual VM.",

    "newHWVMRunbookName": "New-HybridWorkerAndAzureVM",
    "newHWVMRunbookUri": "https://raw.githubusercontent.com/azureautomation/runbooks/master/Utility/ARM/New-HybridWorkerAndAzureVM.ps1",
    "newHWVMRunbookType": "PowerShell",
    "newHWVMRunbookDescription": "This Azure/OMS Automation runbook creates a new VM and onboards it as a hybrid worker.",
    "credentialName": "AzureCredential",
    "variableName": "AzureSubscriptionId",
    "variableType": "string"

  },
    "resources": [
      {
        "name": "[parameters('accountName')]",
        "type": "Microsoft.Automation/automationAccounts",
        "apiVersion": "2015-01-01-preview",
        "location": "[parameters('regionId')]",
        "dependsOn": [],
        "tags": {},
        "properties": {
          "sku": {
            "name": "[variables('pricingTier')]"
          }
        },
        "resources": [
          {
            "name": "[variables('startRunbookName')]",
            "type": "runbooks",
            "apiVersion": "2015-01-01-preview",
            "location": "[parameters('regionId')]",
            "dependsOn": [
              "[concat('Microsoft.Automation/automationAccounts/', parameters('accountName'))]"
            ],
            "tags": {
            },
            "properties": {
              "runbookType": "[variables('startRunbookType')]",
              "logProgress": "false",
              "logVerbose": "false",
              "description": "[variables('startRunbookDescription')]",
              "publishContentLink": {
                "uri": "[variables('startRunbookUri')]",
                "version": "1.0.0.0"
              }
            }
          },
          {
            "name": "[variables('stopRunbookName')]",
            "type": "runbooks",
            "apiVersion": "2015-01-01-preview",
            "location": "[parameters('regionId')]",
            "dependsOn": [
              "[concat('Microsoft.Automation/automationAccounts/', parameters('accountName'))]"
            ],
            "tags": {
            },
            "properties": {
              "runbookType": "[variables('stopRunbookType')]",
              "logProgress": "false",
              "logVerbose": "false",
              "description": "[variables('stopRunbookDescription')]",
              "publishContentLink": {
                "uri": "[variables('stopRunbookUri')]",
                "version": "1.0.0.0"
              }
            }
          },
          {
            "name": "[variables('registerDSCRunbookName')]",
            "type": "runbooks",
            "apiVersion": "2015-01-01-preview",
            "location": "[parameters('regionId')]",
            "dependsOn": [
              "[concat('Microsoft.Automation/automationAccounts/', parameters('accountName'))]"
            ],
            "tags": {
            },
            "properties": {
              "runbookType": "[variables('registerDSCRunbookType')]",
              "logProgress": "false",
              "logVerbose": "false",
              "description": "[variables('registerDSCRunbookDescription')]",
              "publishContentLink": {
                "uri": "[variables('registerDSCRunbookUri')]",
                "version": "1.0.0.0"
              }
            }
          },
          {
            "name": "[variables('newHWVMRunbookName')]",
            "type": "runbooks",
            "apiVersion": "2015-01-01-preview",
            "location": "[parameters('regionId')]",
            "dependsOn": [
              "[concat('Microsoft.Automation/automationAccounts/', parameters('accountName'))]"
            ],
            "tags": {
            },
            "properties": {
              "runbookType": "[variables('newHWVMRunbookType')]",
              "logProgress": "false",
              "logVerbose": "false",
              "description": "[variables('newHWVMRunbookDescription')]",
              "publishContentLink": {
                "uri": "[variables('newHWVMRunbookUri')]",
                "version": "1.0.0.0"
              }
            }
          },

          {
            "name": "[concat(parameters('accountName'), '/', variables('aadClientId'))]",
            "type": "Microsoft.Automation/automationAccounts/jobs",
            "apiVersion": "2015-10-31",
            "location": "[parameters('regionId')]",
            "dependsOn": [
              "[concat('Microsoft.Automation/automationAccounts/', parameters('accountName'), '/runbooks/', variables('newHWVMRunbookName'))]"
            ],
            "tags": {},
            "properties": {
              "runbook": {
                "name": "[variables('newHWVMRunbookName').Name]"
              }
            }
          },

          {
            "name": "[variables('credentialName')]",
            "type": "credentials",
            "apiVersion": "2015-01-01-preview",
            "location": "[parameters('regionId')]",
            "dependsOn": [
              "[concat('Microsoft.Automation/automationAccounts/', parameters('accountName'))]"
            ],
            "tags": {},
            "properties": {
              "userName": "[parameters('userName')]",
              "password": "[parameters('password')]"
            }
          },
          {
            "name": "[variables('variableName')]",
            "type": "variables",
            "apiVersion": "2015-01-01-preview",
            "location": "[parameters('regionId')]",
            "dependsOn": [
              "[concat('Microsoft.Automation/automationAccounts/', parameters('accountName'))]"
            ],
            "tags": {
            },
            "properties": {
              "description": "Subscription ID for the Azure account to manage.",
              "isEncrypted": 0,
              "type": "[variables('variableType')]",
              "value": "[concat('\"',parameters('subscriptionIdValue'),'\"')]"
            }
          }
        ]
      }
    ],
    "outputs": {}
}
