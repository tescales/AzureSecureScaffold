{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Key Vault"
            }
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "Tenant Id for the subscription and use assigned access to the vault. Available from the Get-AzSubscription PowerShell cmdlet"
            }
        },
        "accessPolicies": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Access policies object {\"tenantId\":\"\",\"objectId\":\"\",\"permissions\":{\"keys\":[\"\"],\"secrets\":[\"\"]}}"
            }
        },
        "vaultSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "SKU for the vault"
            }
        },
        "enabledForDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for ARM template deployment"
            }
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies if the vault is enabled for volume encryption"
            }
        },
        "secrets": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "all secrets {\"secretName\":\"\",\"secretValue\":\"\"}"
            }
        }
    },
    "variables": {
        "ghUrl": "https://raw.githubusercontent.com/tescales/azure-scaffold/master/templates/keyvault/add/policy.json"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('secrets')[copyIndex()].secretName)]",
            "apiVersion": "2018-02-14",
            "properties": {
                "value": "[parameters('secrets')[copyIndex()].secretValue]"
            },
            "copy": {
                "name": "secretsCopy",
                "count": "[length(parameters('secrets'))]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "[concat('AccessPolicy_',copyIndex())]",
            "copy": {
                "name": "policiesCopy",
                "count": "[length(parameters('accessPolicies'))]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ghUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "displayName": {
                        "value": "[parameters('accessPolicies')[copyIndex()].displayname]"
                    },
                    "tenantId": {
                        "value": "[parameters('accessPolicies')[copyIndex()].tenantId]"
                    },
                    "objectId": {
                        "value": "[parameters('accessPolicies')[copyIndex()].objectId]"
                    },
                    "permissions": {
                        "value": "[parameters('accessPolicies')[copyIndex()].permissions]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "secrets": {
            "value": "[concat(parameters('keyVaultName'), '/', parameters('secrets')).secretName]",
            "type": "array"
        }
    }
}
