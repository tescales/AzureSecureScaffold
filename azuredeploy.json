{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "gitHubUser": {
      "type": "string",
      "metadata": {
        "description": "Your GitHub username"
      },
      "defaultValue": "tescales"
    },
    "gitHubRepo": {
      "type": "string",
      "metadata": {
        "description": "Your GitHub repo"
      },
      "defaultValue": "azure-scaffold"
    },
    "subscriptionId": {
      "type": "string",
      "metadata": {
        "description": "Your Azure Subscription Id"
      },
      "defaultValue": "[subscription().subscriptionId]"
    },
    "aadTenantId": {
      "type": "string",
      "metadata": {
        "description": "Your AzureAD TenantId"
      },
      "defaultValue": "[subscription().tenantId]"
    },
    "userObjectId": {
      "type": "string",
      "metadata": {
        "description": "Your User ObjectId"
      },
      "defaultvalue": "00000000-0000-0000-0000-000000000000"
    },
    "roleName": {
      "type": "string",
      "metadata": {
        "description": "Choose the Role to Assign to your Dev VM"
      },
      "defaultValue": "Owner"
    },
    "newVaultName": {
      "type": "string",
      "metadata": {
        "description": "Enter a name to deploy a new KeyVault and grant access to the bootstrapper script, or type 'none' to skip."
      },
      "defaultValue": "kv-bootstrap"
    }
  },
  "variables": {
    "ghURL": "[concat('https://raw.githubusercontent.com/', parameters('gitHubUser'), '/', parameters('gitHubRepo'), '/master')]",
    "keyVaultDeployUri": "[concat(variables('ghURL'), '/templates/keyvault/azuredeploy.json')]",
    "automationAcctDeployUri": "[concat(variables('ghURL'), '/templates/automation/azuredeploy.json')]",
    "workspaceDeployUri": "[concat(variables('ghURL'), '/templates/workspace/azuredeploy.json')]",
    "vmDeployUri": "[concat(variables('ghURL'), '/templates/vm/azuredeploy.json')]",
    "dscDeployUri": "[concat(variables('ghURL'), '/templates/dsc/azuredeploy.json')]",
    "keyVaultName": "[concat('kv-', resourcegroup().name)]",
    "automationAcctName": "[concat('aa-', resourcegroup().name)]",
    "workspaceName": "[concat('logs-', resourcegroup().name)]",
    "vmName": "[concat('vm-', resourceGroup().name)]",
    "roleAssignmentId": "[guid(resourceGroup().name)]",
    "cgName": "[concat('deploy', take(toLower( replace( resourceGroup().name, '-', '') ),23))]",
    "roleDefinitions": {
      "Owner": {
        "id": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
      },
      "Contributor": {
        "id": "b24988ac-6180-42a0-ab88-20f7382dd24c"
      },
      "Reader": {
        "id": "acdd72a7-3385-48ef-bd42-f606fba81ae7"
      },
      "StorageBlobDataOwner": {
        "id": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b"
      },
      "StorageBlobDataContributor": {
        "id": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
      },
      "StorageBlobDataReader": {
        "value": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1"
      },
      "None": {
        "id": "none"
      },
      "none": {
        "id": "none"
      }
    },
    "chosenRole": "[variables('roleDefinitions')[parameters('roleName')].id]",
    "roleDefinitionId": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Authorization/roleDefinitions/', variables('chosenRole'))]"
  },
  "resources": [
    {
      "name": "[variables('cgName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "location": "[resourcegroup().location]",
      "comments": "",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "containers": [
          {
            "name": "bootstrapper",
            "properties": {
              "image": "microsoft/azure-cli",
              "command": [
                "/bin/bash",
                "-c",
                "chmod +x /code/$GITHUB_REPO/bootstrap/bootstrap.sh; /code/$GITHUB_REPO/bootstrap/bootstrap.sh"
              ],
              "volumeMounts": [
                {
                  "name": "git-volume",
                  "mountPath": "/code"
                }
              ],
              "environmentVariables": [
                {
                  "name": "GITHUB_REPO",
                  "value": "[parameters('gitHubRepo')]"
                },
                {
                  "name": "AZURE_RESOURCE_GROUP",
                  "value": "[resourceGroup().name]"
                },
                {
                  "name": "AZURE_LOCATION",
                  "value": "[resourceGroup().location]"
                },
                {
                  "name": "AZURE_SUBSCRIPTION_ID",
                  "value": "[parameters('subscriptionId')]"
                },
                {
                  "name": "AZURE_AADTENANT_ID",
                  "value": "[parameters('aadTenantId')]"
                },
                {
                  "name": "AZURE_KEYVAULT",
                  "value": "[parameters('newVaultName')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "1",
                  "memoryInGb": "1"
                }
              }
            }
          }
        ],
        "restartPolicy": "OnFailure",
        "osType": "Linux",
        "volumes": [
          {
            "name": "git-volume",
            "gitRepo": {
              "repository": "[concat('https://github.com/', parameters('gitHubUser'), '/', parameters('gitHubRepo'))]"
            }
          }
        ]
      }
    },
    {
      "condition": "[not(equals(variables('chosenRole'),'none'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2017-09-01",
      "name": "[variables('roleAssignmentId')]",
      "dependsOn": [
        "[concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionId')]",
        "principalId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.principalId]",
        "scope": "[resourcegroup().id]"
      }
    },
    {
      "name": "[concat('Deploy_', variables('keyVaultName'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyVaultDeployUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "tenantId": {
            "value": "[parameters('aadTenantId')]"
          },
          "accessPolicies": {
            "value": [
              {
                "tenantId": "[parameters('aadTenantId')]",
                "objectId": "[parameters('userObjectId')]",
                "displayname": "deployedByUser",
                "permissions": {
                  "certificates": [
                    "all"
                  ],
                  "keys": [
                    "all"
                  ],
                  "secrets": [
                    "all"
                  ]
                }
              },
              {
                "tenantId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.tenantId]",
                "objectId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.principalId]",
                "permissions": {
                  "keys": [],
                  "secrets": [
                    "all"
                  ],
                  "certificates": [],
                  "storage": []
                }
              }
            ]
          },
          "enabledForDeployment": {
            "value": true
          },
          "enabledForTemplateDeployment": {
            "value": true
          },
          "enabledForDiskEncryption": {
            "value": true
          },
          "secrets": {
            "value": [
              {
                "secretName": "adminPassword",
                "secretValue": "[guid(concat(resourceGroup().id,deployment().name))]"
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[concat('Deploy_',variables('workspaceName'))]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('workspaceDeployUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[variables('workspaceName')]"
          },
          "workspaceRegion": {
            "value": "[resourceGroup().location]"
          },
          "solutions": {
            "value": [
              {
                "name": "AzureAutomation",
                "publisher": "Microsoft"
              },
              {
                "name": "AzureActivity",
                "publisher": "Microsoft"
              },
              {
                "name": "InfrastructureInsights",
                "publisher:": "Microsoft"
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "Link_AccountWithWorkspace",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'Deploy_', variables('workspaceName'))]",
        "[concat('Microsoft.Resources/deployments/', 'Deploy_', variables('automationAcctName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/azureautomation/automation-packs/master/managed-vm/linked-templates/linkedworkspaceaccount.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "accountName": {
            "value": "[variables('automationAcctName')]"
          },
          "accountResourceGroupName": {
            "value": "[resourceGroup().name]"
          },
          "workspaceName": {
            "value": "[variables('workspaceName')]"
          },
          "workspaceRegion": {
            "value": "[resourceGroup().location]"
          }
        }
      }
    },
    {
      "name": "[concat('Deploy_', variables('automationAcctName'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'Deploy_', variables('keyVaultName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('automationAcctDeployUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "accountName": {
            "value": "[variables('automationAcctName')]"
          },
          "userName": {
            "value": "[parameters('userObjectId')]"
          },
          "password": {
            "value": "**ENTER PASSWORD HERE**"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "runbooks": {
            "value": [
              {
                "name": "StartAzureV2VMs",
                "runboookType": "Graph",
                "Uri": "https://gallery.technet.microsoft.com/scriptcenter/Start-Azure-ARM-VMs-66fb875d/file/162482/1/StartAzureV2Vm.graphrunbook",
                "description": "This Graphical PowerShell runbook connects to Azure using an Automation Run As account and starts all V2 VMs in an Azure subscription or in a resource group or a single named V2 VM. You can attach a recurring schedule to this runbook to run it at a specific time."
              },
              {
                "name": "StopAzureV2VMs",
                "runboookType": "Graph",
                "Uri": "https://gallery.technet.microsoft.com/scriptcenter/Stop-Azure-ARM-VMs-1ba96d5b/file/162480/1/StopAzureV2Vm.graphrunbook",
                "description": "This Graphical PowerShell runbook connects to Azure using an Automation Run As account and stops all V2 VMs in an Azure subscription or in a resource group or a single named V2 VM. You can attach a recurring schedule to this runbook to run it at a specific time."
              },
              {
                "name": "Register-VMDSC",
                "runboookType": "Graph",
                "Uri": "https://gallery.technet.microsoft.com/scriptcenter/Registers-Azure-resource-31979771/file/160035/1/Register-VMDSC.graphrunbook",
                "description": "This runbook registers Azure resource manager virtual machines with automation DSC service. These can either be Windows or Linux virtual machines that are supported with DSC. You can specify the whole subscription, a specific resource group, or an individual VM."
              },
              {
                "name": "New-HybridWorkerAndAzureVM",
                "runboookType": "PowerShell",
                "Uri": "https://raw.githubusercontent.com/azureautomation/runbooks/master/Utility/ARM/New-HybridWorkerAndAzureVM.ps1",
                "description": "This Azure/OMS Automation runbook creates a new VM and onboards it as a hybrid worker.",
                "credentialName": "AzureCredential",
                "variableName": "AzureSubscriptionId",
                "variableType": "string"
              }
            ]
          },
          "runnowbooks": {
            "value": [
              {
                "name": "AutoTagResources-generic",
                "runboookType": "Script",
                "Uri": "https://gallery.technet.microsoft.com/scriptcenter/Automatically-Azure-fc5f1443/file/165796/1/AutoTagResources-generic.ps1",
                "description": "An Azure Automation Runbook, to automatically tag Azure Resource Groups with the owner alias."
              }
            ]
          }
        }
      }
    },
    {
      "name": "Deploy_DSCAutomation",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'Deploy_', variables('automationAcctName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('dscDeployUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "accountName": {
            "value": "[variables('automationAcctName')]"
          },
          "configurations": {
            "value": [
              {
                "name": "InstallChoco",
                "description": "Installs Chocolatey",
                "uri": "https://raw.githubusercontent.com/tescales/azure-scaffold/master/configurations/installChoco.ps1"
              }
            ]
          },
          "modules": {
            "value": [
              {
                "name": "cChoco",
                "uri": "https://devopsgallerystorage.blob.core.windows.net/packages/cchoco.2.3.1.nupkg"
              }
            ]
          }
        }
      }
    },
    {
      "name": "[concat('Deploy_', variables('vmName'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'Deploy_', variables('keyVaultName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDeployUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "adminPassword": {
            "reference": {
              "keyVault": {
                "id": "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
              },
              "secretName": "adminPassword"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2017-03-30",
      "name": "[concat(variables('vmName'),'/Microsoft.Monitoring')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'Deploy_', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "MicrosoftMonitoringAgent",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "workspaceId": "[reference(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces/', variables('workspaceName')), '2015-11-01-preview').customerId]",
          "azureResourceId": "[resourceId(resourceGroup().name, 'Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        },
        "protectedSettings": {
          "workspaceKey": "[listKeys(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces/', variables('workspaceName')), '2015-11-01-preview').primarySharedKey]"
        }
      }
    },
    {
      "name": "[concat(variables('vmName'),'/Microsoft.Powershell.DSC')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'Deploy_', variables('vmName'))]"
      ],
      "tags": {
        "AutomationAccountARMID": "[resourceId(resourceGroup().name, 'Microsoft.Automation/automationAccounts/', variables('automationAcctName'))]"
      },
      "apiVersion": "2015-06-15",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.74",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Properties": [
            {
              "Name": "RegistrationKey",
              "Value": {
                "UserName": "PLACEHOLDER_DONOTUSE",
                "Password": "PrivateSettingsRef:registrationKeyPrivate"
              },
              "TypeName": "System.Management.Automation.PSCredential"
            },
            {
              "Name": "RegistrationUrl",
              "Value": "[reference(resourceId(concat(resourceGroup().name), 'Microsoft.Automation/automationAccounts/', variables('automationAcctName')),'2015-01-01-preview').RegistrationUrl]",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationMode",
              "Value": "ApplyAndAutoCorrect",
              "TypeName": "System.String"
            },
            {
              "Name": "NodeConfigurationName",
              "Value": "InstallChoco.chocoVM",
              "TypeName": "System.String"
            },
            {
              "Name": "ConfigurationModeFrequencyMins",
              "Value": "15",
              "TypeName": "System.Int32"
            },
            {
              "Name": "RefreshFrequencyMins",
              "Value": "30",
              "TypeName": "System.Int32"
            },
            {
              "Name": "RebootNodeIfNeeded",
              "Value": true,
              "TypeName": "System.Boolean"
            },
            {
              "Name": "AllowModuleOverwrite",
              "Value": true,
              "TypeName": "System.Boolean"
            },
            {
              "Name": "ActionAfterReboot",
              "Value": "ContinueConfiguration",
              "TypeName": "System.String"
            }
          ]
        },
        "protectedSettings": {
          "Items": {
            "registrationKeyPrivate": "[listKeys(resourceId(concat(resourceGroup().name), 'Microsoft.Automation/automationAccounts/', variables('automationAcctName')), '2015-01-01-preview').Keys[0].value]"
          }
        }
      }
    }
  ],
  "outputs": {}
}