{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "nameRoot": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine"
      },
      "defaultValue": "[uniqueString(resourceGroup().name)]"
    },
    "subscriptionId": {
      "type": "string",
      "metadata": {
        "description": "your Azure subscription Id"
      },
      "defaultValue": "[subscription().subscriptionId]"
    },
    "ghURL": {
      "type": "string",
      "metadata": {
        "description": "Your GitHub repo"
      },
      "defaultValue": "https://raw.githubusercontent.com/tescales/azure-scaffold/master/"
    },
    "aadappname": {
      "type": "string",
      "metadata": {
        "description": "name of aad app"
      }
    },
    "aadClientID": {
      "type": "string",
      "metadata": {
        "description": "Client ID of AAD app which has permissions to KeyVault"
      }
    },
    "aadClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Client Secret of AAD app which has permissions to KeyVault"
      }
    },
    "aadTenantId": {
      "type": "string",
      "metadata": {
        "description": "AzureAD TenantId"
      }
    },
    "useExistingKek": {
      "type": "string",
      "defaultValue": "nokek",
      "allowedValues": [
        "nokek",
        "kek"
      ],
      "metadata": {
        "description": "Select kek if the secret should be encrypted with a key encryption key and pass explicit keyEncryptionKeyURL. For nokek, you can keep keyEncryptionKeyURL empty."
      }
    },
    "keyEncryptionKeyURL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"
      }
    }
  },
  "variables": {
    "automationName": "[parameters('nameRoot')]",
    "automationUser": "username",
    "automationPass": "password",
    "keyVaultName": "[parameters('nameRoot')]",
    "keyVaultURL": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]",
    "keyVaultResourceID": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
    "setupChocolatelyScriptLocation": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/visual-studio-dev-vm-chocolatey/scripts/",
    "setupChocolateyScriptFileName": "SetupChocolatey.ps1",
    "chocoPackages": "boxstarter,googlechrome,adobereader,notepadplusplus.install",
    "chocoScript": "https://chocolatey.org/install.ps1",
    "chocoScriptFile": "install.ps1"
  },

  "resources": [
    {
      "name": "[variables('automationName')]",
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2015-10-31",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "properties": {
        "sku": {
          "name": "Free"
        }
      }
    },
    {
      "name": "DeployKeyVault",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('ghURL'), '/templates/keyvault/azuredeploy.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },

          "tenantId": {
            "value": "[parameters('aadTenantId')]"
          },

          "accessPolicies": {
            "value": [
              {
                "tenantId": "[parameters('aadTenantId')]",
                "objectId": "[parameters('aadClientID')]",
                "displayname": "[parameters('aadappname')]",
                "permissions": {
                  "keys": [ "all" ],
                  "secrets": [ "all" ]
                }
              }
            ]
          },
          "secrets": {
            "value": [
              {
                "secretName": "ConnectionString",
                "secretValue": "SecureString1"
              }
            ]
          },
          "enabledForDeployment": {
            "value": true
          },

          "enabledForTemplateDeployment": {
            "value": true
          },
          "enableVaultForVolumeEncryption": {
            "value": true
          }
        }
      }
    },
    {
      "name": "DeployAutomationAcct",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Automation/automationAccounts/', variables('automationName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('ghURL'), '/templates/automation/azuredeploy.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "accountName": { "value": "[variables('automationName')]" },
          "regionId": { "value": "[resourceGroup().location]" },
          "userName": { "value": "[parameters('aadClientID')]" },
          "password": { "value": "[parameters('aadClientSecret')]" },
          "subscriptionId": { "value": "[parameters('subscriptionId')]" },
          "runbooks": {
            "value": [
              {
                "name": "StartAzureV2VMs",
                "runboookType": "Graph",
                "Uri": "https://gallery.technet.microsoft.com/scriptcenter/Start-Azure-ARM-VMs-66fb875d/file/162482/1/StartAzureV2Vm.graphrunbook",
                "description": "This Graphical PowerShell runbook connects to Azure using an Automation Run As account and starts all V2 VMs in an Azure subscription or in a resource group or a single named V2 VM. You can attach a recurring schedule to this runbook to run it at a specific time."
              },
              {
                "name": "StopAzureV2VMs",
                "runboookType": "Graph",
                "Uri": "https://gallery.technet.microsoft.com/scriptcenter/Stop-Azure-ARM-VMs-1ba96d5b/file/162480/1/StopAzureV2Vm.graphrunbook",
                "description": "This Graphical PowerShell runbook connects to Azure using an Automation Run As account and stops all V2 VMs in an Azure subscription or in a resource group or a single named V2 VM. You can attach a recurring schedule to this runbook to run it at a specific time."
              },
              {
                "name": "Register-VMDSC",
                "runboookType": "Graph",
                "Uri": "https://gallery.technet.microsoft.com/scriptcenter/Registers-Azure-resource-31979771/file/160035/1/Register-VMDSC.graphrunbook",
                "description": "This runbook registers Azure resource manager virtual machines with automation DSC service. These can either be Windows or Linux virtual machines that are supported with DSC. You can specify the whole subscription, a specific resource group, or an individual VM."
              },
              {
                "name": "New-HybridWorkerAndAzureVM",
                "runboookType": "PowerShell",
                "Uri": "https://raw.githubusercontent.com/azureautomation/runbooks/master/Utility/ARM/New-HybridWorkerAndAzureVM.ps1",
                "description": "This Azure/OMS Automation runbook creates a new VM and onboards it as a hybrid worker.",
                "credentialName": "AzureCredential",
                "variableName": "AzureSubscriptionId",
                "variableType": "string"
              }
            ]
          },
          "runnowbooks": {
            "value": [
              {
                "name": "AutoTagResources-generic",
                "runboookType": "Script",
                "Uri": "https://gallery.technet.microsoft.com/scriptcenter/Automatically-Azure-fc5f1443/file/165796/1/AutoTagResources-generic.ps1",
                "description": "An Azure Automation Runbook, to automatically tag Azure Resource Groups with the owner alias."
              }
            ]
          }
        }
      }
    },
    {
      "name": "DeployDSCAutomation",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Automation/automationAccounts/', variables('automationName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('ghURL'), '/templates/dsc/azuredeploy.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "accountName": { "value": "[variables('automationName')]" },
          "configurations": {
            "value": [
              {
                "name": "InstallChoco",
                "description":  "Installs Chocolatey",
                "uri": "https://raw.githubusercontent.com/tescales/azure-scaffold/master/configurations/installChoco.ps1"
              }
            ]
          },
          "modules" : {
                "value": [
                  {
                    "name": "cChoco",
                    "uri": "https://devopsgallerystorage.blob.core.windows.net/packages/cchoco.2.3.1.nupkg"
                  }
                ]
              }
          }
        }
    }
  ],
  "outputs": {}
}
